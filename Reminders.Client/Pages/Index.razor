@page "/"
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Reminders</PageTitle>

<h1>To Do List</h1>

<div class = "row mb-4">
    <div class = "col-sm-6">
        <button type = "button" class = "btn btn-primary" @onclick = "CreateReminder">New Reminder</button>
    </div>
</div>

@if (reminders is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DeleteReminder reminder = "@currentReminder" OnClose = "@OnDeleteModalClose"> 
    </DeleteReminder>

    <table class = "table table-striped table-bordered table-hover">
        <thead class = "table-dark">
            <th>Number</th>
            <th>Name</th>
            <th>Description</th>
            <th>Time (Hours)</th>
            <th>Due Date</th>
            <th></th>
        </thead>

        <tbody>
            @foreach (var reminder in reminders)
            {
                <tr>
                    <td>@reminder.Number</td>
                    <td>@reminder.Name</td>
                    <td>@reminder.Description</td>
                    <td>@reminder.Time</td>
                    <td>@reminder.DueDate.ToString("MM/dd/yyyy")</td>
                    <td>
                        <button class = "btn btn-primary" @onclick = "(() => EditReminder(reminder.Number))">
                            <i class = "oi oi-pencil"></i>
                        </button>
                        <button class = "btn btn-danger" 
                                data-bs-toggle = "modal"
                                data-bs-target = "#deleteModal"
                                @onclick = "(() => currentReminder = reminder)">
                            <i class = "oi oi-x"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code
{
    private Reminder[]? reminders;
    private Reminder? currentReminder;

    protected override void OnInitialized()
    {
        reminders = ReminderClient.GetReminders();
    }

    private void CreateReminder()
    {
        NavigationManager.NavigateTo("/reminder");
    }

    private void EditReminder(int number)
    {
        NavigationManager.NavigateTo($"/reminder/{number}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            ReminderClient.DeleteReminder(currentReminder!.Number);
            reminders = ReminderClient.GetReminders();
        }
    }
}